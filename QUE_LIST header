#ifndef QUE_LIST_H
#define QUE_LIST_H
#include <iostream>


using namespace std;

template <class T>
class QUEUE_LIST
{
private:
	struct node
	{
		T info;
		node *next;
	};
	node *front, *rear;

public:
	QUEUE_LIST()										//constructor
	{
		front = NULL;									//set front pointer to NULL
		rear = NULL;									//set rear pointer to NULL
	}

	//================================================Push method====================================================================
	//This method will add a node to the rear of the queu
	void pushq(T x)
	{
		node *p;
		p = new (node);
		p->info = x;
		p->next = NULL;
		if (front == NULL)
		{
			front = p;
			rear = p;
		}
		else
		{
			rear->next = p;
			rear = p;

		}
	}
	//================================================End push method================================================================
	//================================================Emptyq method==================================================================
	bool Emptyq()
	{
		if (front == NULL)
			return true;
		else 
			return false;
	}
	//================================================End Emptyq method==============================================================

	//================================================Pop method=====================================================================
	T popq()
	{
		node *p = front;
		T x;
		x = front->info;
		front = front->next;
		delete (p);
		return x;
	}
	//================================================End pop method=================================================================


};

#endif
